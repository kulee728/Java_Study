package com.design.behaviorPattern.observer.observer;

import java.util.HashMap;
import java.util.Map;

public class StockUser implements Observer {
	private String name;
	private double accountBalance;
	private int stockQuantity;
	private double stockPrice;
	
	public StockUser(String name, double accountBalance) {
		this.name = name;
		this.accountBalance = accountBalance;
		stockQuantity = 0;
		stockPrice = 0;
	}
	
	@Override
	public void update(double price) {
		stockPrice = price;
		double asset = accountBalance + stockQuantity*stockPrice;
		System.out.printf("%s님, 주식 가격이 변동되었습니다. (%.1f원), 예금 잔액은 %.1f원, 총 자산 평가액은 %.1f원 입니다.\n",name,price,accountBalance,asset);
	}
	
	public void buyStock(int quantity) {
		//System.out.println(name+"님 " +quantity+"주 구매 완료");
		stockQuantity += quantity;
		accountBalance -= stockQuantity*stockPrice;
		//System.out.printf("%s님, 주식 수량이 변동되었습니다. (%d주 보유중), 예금 잔액은 %.1f원 입니다.\n",name,stockQuantity,accountBalance);

	}

}
